trigger:
  - main
  - master
  - develop

pr:
  - main
  - master
  - release/*
  - develop

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: GetRevision@1
    displayName: 'Get Revision'
    inputs:
      VariableName: Revision
  - script: |
      VERSION_TAG=`./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}'`
      echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"

      IMAGE_TAGS="${VERSION_TAG}.$(date '+%Y.%m.%d').$(Revision)"
      echo "##vso[task.setvariable variable=IMAGE_SEMANTIC_HASH]$IMAGE_TAGS"
      echo Tags: $IMAGE_TAGS
      echo "##vso[task.setvariable variable=IMAGE_TAGS]$IMAGE_TAGS"
    displayName: Set Build version and image tag

  - task: Docker@2
    displayName: Login to Azure registry
    inputs:
      containerRegistry: "azurecr-oaf"
      command: "login"

  - task: Docker@2
    displayName: Build and push image to container registry
    condition: and(succeeded(), or(eq(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.SourceBranchName'], 'master'), eq(variables['Build.SourceBranchName'], 'develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
    inputs:
      command: buildAndPush
      repository: "oneacrefund/ph-ee-connector-ams-pesa"
      dockerfile: "$(System.DefaultWorkingDirectory)/Dockerfile"
      containerRegistry: "azurecr-oaf"
      tags: |
        $(IMAGE_TAGS)

  - task: PublishBuildArtifacts@1
    displayName: Publish configuration package
    condition: and(succeeded(), or(eq(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.SourceBranchName'], 'master'), eq(variables['Build.SourceBranchName'], 'develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: "ph-ee-connector-ams-pesa"
      publishLocation: "Container"
